{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/PopOut.jsx","components/Orders.jsx","pages/Task.jsx","pages/TaskInfo.jsx","components/Content.jsx","components/Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledHeader","styled","header","Header","className","StyledFooter","footer","StyledImg","img","StyledIcon","a","Footer","icon","href","src","alt","StyledPopOut","div","StyledTable","table","StyledTableHeader","th","StyledTableEntry","td","PopOut","props","orders","mvPurchaseOrders","filter","order","PurchaseOrderId","selectedItem","map","filteredOrders","PurchaseOrderAddress","PurchaseOrderContactPerson","PurchaseOrderStatus","PurchaseOrderDetails","detail","PurchaseOrderRowProductSKU","PurchaseOrderRowQuantity","PurchaseOrderRowUnitPriceWithoutTaxOrDiscount","PurchaseOrderRowTotalAmount","Modal","setAppElement","document","getElementById","StyledPara","StyledButton","button","modalStyles","content","backgroundColor","Orders","React","useState","modalIsOpen","setIsOpen","setSelectedItem","closeModal","data","key","onClick","console","log","PurchaseOrderTypeAbbreviation","PurchaseOrderNo","isOpen","contentLabel","onRequestClose","style","Task","TaskInfo","StyledNav","ul","Content","location","useLocation","exact","activeClassName","to","TransitionGroup","CSSTransition","appear","in","timeout","classNames","path","children","Nav","library","add","fab","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"moXAEMA,EAAeC,IAAOC,OAAV,mJAOlB,SAASC,IACP,OACE,eAACH,EAAD,CAAcI,UAAU,SAAxB,UACE,oBAAIA,UAAU,gBAAd,yCACA,oBAAIA,UAAU,oBAAd,uBACA,oBAAIA,UAAU,mBAAd,qC,kBCXAC,EAAeJ,IAAOK,OAAV,8KAQZC,EAAYN,IAAOO,IAAV,+CAITC,EAAaR,IAAOS,EAAV,uFAMT,SAASC,IACd,OACE,eAACN,EAAD,CAAcD,UAAU,SAAxB,UACE,sBAAKA,UAAU,eAAf,2EACgE,uBADhE,8CAE6C,yBAC3C,cAAC,IAAD,CAAiBQ,KAAM,CAAC,MAAO,SAAUR,UAAU,qBAGrD,sBAAKA,UAAU,eAAf,UACE,cAACK,EAAD,CACEI,KAAK,mCACLT,UAAU,eAFZ,SAIE,cAAC,IAAD,CAAiBQ,KAAM,CAAC,MAAO,cAEjC,cAACH,EAAD,CACEI,KAAK,yDACLT,UAAU,eAFZ,SAIE,cAAC,IAAD,CAAiBQ,KAAM,CAAC,MAAO,sBAEjC,cAACH,EAAD,CACEI,KAAK,0DACLT,UAAU,eAFZ,SAIE,cAAC,IAAD,CAAiBQ,KAAM,CAAC,MAAO,mBAEjC,mBAAGC,KAAK,6BAA6BT,UAAU,eAA/C,SACE,cAACG,EAAD,CACEO,IAAI,yCACJC,IAAI,wCACJX,UAAU,wB,gEChDhBY,EAAef,IAAOgB,IAAV,qGAMZC,EAAcjB,IAAOkB,MAAV,qFAKXC,EAAoBnB,IAAOoB,GAAV,wHAOjBC,EAAmBrB,IAAOsB,GAAV,kGAMf,SAASC,EAAOC,GACrB,OACE,cAACT,EAAD,UACGU,EAAOC,iBACLC,QAAO,SAACC,GAAD,OAAWA,EAAMC,kBAAoBL,EAAMM,gBAClDC,KAAI,SAACC,GACJ,OACE,eAACjB,EAAD,CAAcZ,UAAU,SAAxB,UACE,0BAASA,UAAU,eAAnB,UACE,oBAAIA,UAAU,uBAAd,qBACA,mBAAGA,UAAU,wBAAb,SACG6B,EAAeC,0BAIpB,0BAAS9B,UAAU,eAAnB,UACE,oBAAIA,UAAU,uBAAd,4BACA,mBAAGA,UAAU,wBAAb,SACG6B,EAAeE,gCAGpB,0BAAS/B,UAAU,eAAnB,UACE,oBAAIA,UAAU,uBAAd,oBACA,mBAAGA,UAAU,wBAAb,SACG6B,EAAeG,yBAGpB,0BAAShC,UAAU,eAAnB,UACE,oBAAIA,UAAU,uBAAd,qBAEA,eAACc,EAAD,CAAad,UAAU,eAAvB,UACE,qBAAIA,UAAU,YAAd,UACE,cAACgB,EAAD,CAAmBhB,UAAU,eAA7B,yBAGA,cAACgB,EAAD,CAAmBhB,UAAU,eAA7B,8BAGA,cAACgB,EAAD,CAAmBhB,UAAU,eAA7B,wBAGA,cAACgB,EAAD,CAAmBhB,UAAU,eAA7B,6BAKD6B,EAAeI,qBAAqBL,KAAI,SAACM,GACxC,OACE,qBAAIlC,UAAU,YAAd,UACE,cAACkB,EAAD,CAAkBlB,UAAU,cAA5B,SACGkC,EAAOC,6BAEV,cAACjB,EAAD,CAAkBlB,UAAU,cAA5B,SACGkC,EAAOE,2BAEV,cAAClB,EAAD,CAAkBlB,UAAU,cAA5B,SACGkC,EAAOG,gDAEV,cAACnB,EAAD,CAAkBlB,UAAU,cAA5B,SACGkC,EAAOI,kDCjFlCC,IAAMC,cAAcC,SAASC,eAAe,SAE5C,IAAMC,EAAa9C,IAAOgB,IAAV,4JAUV+B,EAAe/C,IAAOgD,OAAV,wEAKZC,EAAc,CAClBC,QAAS,CACPC,gBAAiB,YAId,SAASC,IACd,MAAiCC,IAAMC,UAAS,GAAhD,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,EAAwCH,IAAMC,SAAS,GAAvD,mBAAOxB,EAAP,KAAqB2B,EAArB,KAMA,SAASC,IACPF,GAAU,GAGZ,OACE,eAACV,EAAD,WACGrB,EAAOC,iBAAiBK,KAAI,SAAC4B,EAAMC,GAClC,OACE,oBAEEzD,UAAU,oBACV0D,QAAS,WAdjBL,GAAU,GAgBAC,EAAgBE,EAAK9B,iBACrBiC,QAAQC,IAAIjC,IANhB,UASG6B,EAAKK,8BATR,MAS0CL,EAAKM,kBARxCL,MAaX,eAAC,IAAD,CACEM,OAAQX,EACRY,aAAa,6BACbC,eAAgBV,EAChBW,MAAOpB,EAJT,UAME,cAAC1B,EAAD,CAAQO,aAAcA,IACtB,cAACiB,EAAD,CAAc5C,UAAU,gBAAgB0D,QAASH,EAAjD,yBClED,SAASY,IACd,OACE,qBAAKnE,UAAU,OAAf,SACE,cAACiD,EAAD,MCLC,SAASmB,IACd,OACE,sBAAKpE,UAAU,YAAf,UACE,oBAAIA,UAAU,eAAd,8BACA,oBAAGA,UAAU,YAAb,iJAIE,qBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,aAAd,gKAIE,oBAAIA,UAAU,eAAd,SACE,oBAAIA,UAAU,eAAd,uEAMJ,qBAAIA,UAAU,aAAd,8JAIE,qBAAIA,UAAU,eAAd,UACE,oBAAIA,UAAU,eAAd,kCACA,oBAAIA,UAAU,eAAd,wCAEA,oBAAIA,UAAU,eAAd,iCAEA,qBAAIA,UAAU,eAAd,mKAGyB,uBACvB,qBAAIA,UAAU,eAAd,UACE,oBAAIA,UAAU,cAAd,8EAIA,oBAAIA,UAAU,eAAd,iFAIA,oBAAIA,UAAU,eAAd,gGAIA,oBAAIA,UAAU,eAAd,qG,sBCrCZqE,EAAYxE,IAAOyE,GAAV,oGAMR,SAASC,IACd,IAAIC,EAAWC,cAEf,OACE,qBAAKzE,UAAU,MAAf,SACE,sBAAKA,UAAU,cAAf,UACE,eAACqE,EAAD,CAAWrE,UAAU,YAArB,UACE,cAAC,IAAD,CACE0E,OAAK,EACLC,gBAAgB,SAChBC,GAAG,yBACH5E,UAAU,iBAJZ,kBASA,cAAC,IAAD,CACE2E,gBAAgB,SAChBC,GAAG,6BACH5E,UAAU,iBAHZ,iCASF,uBAEA,qBAAKA,UAAU,sBAAf,SACE,cAAC6E,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAAM,EACNC,IAAE,EACFC,QAAS,IACTC,WAAW,QAJb,SAOE,eAAC,IAAD,CAAQV,SAAUA,EAAlB,UACE,cAAC,IAAD,CAAOW,KAAK,QAAQC,SAAU,cAACjB,EAAD,MAC9B,cAAC,IAAD,CAAOgB,KAAK,YAAYC,SAAU,cAAChB,EAAD,UAJ/BI,EAASf,cCxCrB,SAAS4B,IACd,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOX,OAAK,EAACS,KAAK,IAAlB,SACI,cAAC,IAAD,CAAUP,GAAG,4BAEnB,cAAC,IAAD,CAAOO,KAAK,IAAZ,SACE,cAACZ,EAAD,W,oBCVVe,IAAQC,IAAIC,KAYGC,MAVf,WACE,OACE,gCACE,cAAC1F,EAAD,IACA,cAACsF,EAAD,IACA,cAAC9E,EAAD,QCHSmF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5D,SAASC,eAAe,SAM1BgD,M","file":"static/js/main.8192ecab.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: linear-gradient(#CDF0EA, #F9F9F9);\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <StyledHeader className=\"header\">\r\n      <h1 className=\"header__title\">Megaventory Internship Task</h1>\r\n      <h2 className=\"header__secondary\">July 2021</h2>\r\n      <h3 className=\"header__tertiary\">By Shannon Schrauwen</h3>\r\n    </StyledHeader>\r\n  );\r\n}\r\n\r\nexport { Header };\r\n","import styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst StyledFooter = styled.footer`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  background: linear-gradient(#f9f9f9, #cdf0ea);\r\n  height: 5.75rem;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  height: 1.5rem;\r\n`;\r\n\r\nconst StyledIcon = styled.a`\r\n  font-size: 1.5rem;\r\n  color: green;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nexport function Footer() {\r\n  return (\r\n    <StyledFooter className=\"footer\">\r\n      <div className=\"footer__info\">\r\n        Created by Shannon Schrauwen for Megaventory Internship task. <br />\r\n        Tech stack: React (using create-react-app) <span></span>\r\n        <FontAwesomeIcon icon={[\"fab\", \"react\"]} className=\"footer--icons\" />\r\n      </div>\r\n\r\n      <div className=\"footer__imgs\">\r\n        <StyledIcon\r\n          href=\"https://github.com/ShanSchrauwen\"\r\n          className=\"footer__link\"\r\n        >\r\n          <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\r\n        </StyledIcon>\r\n        <StyledIcon\r\n          href=\"https://stackoverflow.com/users/13308896/shanschrauwen\"\r\n          className=\"footer__link\"\r\n        >\r\n          <FontAwesomeIcon icon={[\"fab\", \"stack-overflow\"]} />\r\n        </StyledIcon>\r\n        <StyledIcon\r\n          href=\"https://www.linkedin.com/in/shannon-schrauwen-562b98bb/\"\r\n          className=\"footer__link\"\r\n        >\r\n          <FontAwesomeIcon icon={[\"fab\", \"linkedin-in\"]} />\r\n        </StyledIcon>\r\n        <a href=\"https://shanschrauwen.com/\" className=\"footer__link\">\r\n          <StyledImg\r\n            src=\"./images/shannon_schrauwen_website.png\"\r\n            alt=\"Shannon Schrauwen portfolio site logo\"\r\n            className=\"footer--img\"\r\n          />\r\n        </a>\r\n      </div>\r\n    </StyledFooter>\r\n  );\r\n}\r\n","import orders from \"../data/purchaseorders.json\";\r\nimport styled from \"styled-components\";\r\n\r\n//styles\r\n\r\nconst StyledPopOut = styled.div`\r\n  background-color: #f9f9f9;\r\n  margin-top: 1rem;\r\n  margin-left: 5rem;\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\nconst StyledTableHeader = styled.th`\r\n  border: 1px solid #ddd;\r\n  padding: 1rem;\r\n  width: 10rem;\r\n  background-color: #CDF0EA;\r\n`;\r\n\r\nconst StyledTableEntry = styled.td`\r\n  border: 1px solid #ddd;\r\n  padding: 0.5rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport function PopOut(props) {\r\n  return (\r\n    <StyledPopOut>\r\n      {orders.mvPurchaseOrders\r\n        .filter((order) => order.PurchaseOrderId === props.selectedItem)\r\n        .map((filteredOrders) => {\r\n          return (\r\n            <StyledPopOut className=\"window\">\r\n              <section className=\"window-items\">\r\n                <h4 className=\"window-items__header\">Address</h4>\r\n                <p className=\"window-items__content\">\r\n                  {filteredOrders.PurchaseOrderAddress}\r\n                </p>\r\n              </section>\r\n\r\n              <section className=\"window-items\">\r\n                <h4 className=\"window-items__header\">Contact Person</h4>\r\n                <p className=\"window-items__content\">\r\n                  {filteredOrders.PurchaseOrderContactPerson}\r\n                </p>\r\n              </section>\r\n              <section className=\"window-items\">\r\n                <h4 className=\"window-items__header\">Status</h4>\r\n                <p className=\"window-items__content\">\r\n                  {filteredOrders.PurchaseOrderStatus}\r\n                </p>\r\n              </section>\r\n              <section className=\"window-items\">\r\n                <h4 className=\"window-items__header\">Details</h4>\r\n\r\n                <StyledTable className=\"window-table\">\r\n                  <tr className=\"table-row\">\r\n                    <StyledTableHeader className=\"table-header\">\r\n                      Product SKU\r\n                    </StyledTableHeader>\r\n                    <StyledTableHeader className=\"table-header\">\r\n                      Quantity Ordered\r\n                    </StyledTableHeader>\r\n                    <StyledTableHeader className=\"table-header\">\r\n                      Unit Price\r\n                    </StyledTableHeader>\r\n                    <StyledTableHeader className=\"table-header\">\r\n                      Total Amount\r\n                    </StyledTableHeader>\r\n                  </tr>\r\n\r\n                  {filteredOrders.PurchaseOrderDetails.map((detail) => {\r\n                    return (\r\n                      <tr className=\"table-row\">\r\n                        <StyledTableEntry className=\"table-entry\">\r\n                          {detail.PurchaseOrderRowProductSKU}\r\n                        </StyledTableEntry>\r\n                        <StyledTableEntry className=\"table-entry\">\r\n                          {detail.PurchaseOrderRowQuantity}\r\n                        </StyledTableEntry>\r\n                        <StyledTableEntry className=\"table-entry\">\r\n                          {detail.PurchaseOrderRowUnitPriceWithoutTaxOrDiscount}\r\n                        </StyledTableEntry>\r\n                        <StyledTableEntry className=\"table-entry\">\r\n                          {detail.PurchaseOrderRowTotalAmount}\r\n                        </StyledTableEntry>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </StyledTable>\r\n              </section>\r\n            </StyledPopOut>\r\n          );\r\n        })}\r\n    </StyledPopOut>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport orders from \"../data/purchaseorders.json\";\r\nimport { PopOut } from \"./PopOut\";\r\n\r\nModal.setAppElement(document.getElementById(\"root\"));\r\n\r\nconst StyledPara = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  padding: 1rem;\r\n  height: 55vh;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  margin-top: 5rem;\r\n  margin-left: 10rem;\r\n`;\r\n\r\nconst modalStyles = {\r\n  content: {\r\n    backgroundColor: \"#F9F9F9\",\r\n  },\r\n};\r\n\r\nexport function Orders() {\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  const [selectedItem, setSelectedItem] = React.useState(1);\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <StyledPara>\r\n      {orders.mvPurchaseOrders.map((data, key) => {\r\n        return (\r\n          <p\r\n            key={key}\r\n            className=\"orders-list__item\"\r\n            onClick={() => {\r\n              openModal();\r\n              setSelectedItem(data.PurchaseOrderId);\r\n              console.log(selectedItem);\r\n            }}\r\n          >\r\n            {data.PurchaseOrderTypeAbbreviation} - {data.PurchaseOrderNo}\r\n          </p>\r\n        );\r\n      })}\r\n\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        contentLabel=\"Purchase Order Information\"\r\n        onRequestClose={closeModal}\r\n        style={modalStyles}\r\n      >\r\n        <PopOut selectedItem={selectedItem} />\r\n        <StyledButton className=\"window--close\" onClick={closeModal}>\r\n          Close\r\n        </StyledButton>\r\n      </Modal>\r\n    </StyledPara>\r\n  );\r\n}\r\n","import { Orders } from \"../components/Orders\";\r\n\r\nexport function Task() {\r\n  return (\r\n    <div className=\"task\">\r\n      <Orders />\r\n    </div>\r\n  );\r\n}\r\n","export function TaskInfo() {\r\n  return (\r\n    <div className=\"Task-info\">\r\n      <h4 className=\"header__task\">Task Information</h4>\r\n      <p className=\"task-info\">\r\n        In the attached JSON file you will find the response of a\r\n        PurchaseOrderGet call to our API, containing an array of\r\n        mvPurchaseOrders.\r\n        <ol className=\"task__list\">\r\n          <li className=\"list--item\">\r\n            The first goal of this project is to parse the orders and display\r\n            them as links in a list. Each list element’s text should follow this\r\n            format:\r\n            <ol className=\"nested--list\">\r\n              <li className=\"nested--item\">\r\n                PurchaseOrderTypeAbbreviation – PurchaseOrderNo\r\n              </li>\r\n            </ol>\r\n          </li>\r\n\r\n          <li className=\"list--item\">\r\n            Clicking each order should open a window which displays some\r\n            information related to the order. The fields you need to include in\r\n            this window are:\r\n            <ol className=\"nested--list\">\r\n              <li className=\"nested--item\">PurchaseOrderAddress</li>\r\n              <li className=\"nested--item\">PurchaseOrderContactPerson</li>\r\n\r\n              <li className=\"nested--item\">PurchaseOrderStatus</li>\r\n\r\n              <li className=\"nested--item\">\r\n                PurchaseOrderDetails For this field you should create a table\r\n                with rows equal to the PurchaseOrderDetails array length, filled\r\n                with this information: <br />\r\n                <ol className=\"nested--list\">\r\n                  <li className=\"nested-item\">\r\n                    PurchaseOrderDetails.PurchaseOrderRowProductSKU (as Product\r\n                    SKU)\r\n                  </li>\r\n                  <li className=\"nested--item\">\r\n                    PurchaseOrderDetails.PurchaseOrderRowQuantity (as Quantity\r\n                    Ordered)\r\n                  </li>\r\n                  <li className=\"nested--item\">\r\n                    PurchaseOrderDetails.PurchaseOrderRowUnitPriceWithoutTaxOrDiscount\r\n                    (as Unit Price)\r\n                  </li>\r\n                  <li className=\"nested--item\">\r\n                    PurchaseOrderDetails.PurchaseOrderRowTotalAmount (as Total\r\n                    Amount)\r\n                  </li>\r\n                </ol>\r\n              </li>\r\n            </ol>\r\n          </li>\r\n        </ol>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Switch, Route, useLocation, NavLink } from \"react-router-dom\";\r\nimport { Task } from \"../pages/Task\";\r\nimport { TaskInfo } from \"../pages/TaskInfo\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\n// Styles\r\n\r\nconst StyledNav = styled.ul`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nexport function Content() {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className=\"nav--Router\">\r\n        <StyledNav className=\"nav--list\">\r\n          <NavLink\r\n            exact\r\n            activeClassName=\"active\"\r\n            to=\"/megaventory_task/home\"\r\n            className=\"nav--list-item\"\r\n          >\r\n            Task\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to=\"/megaventory_task/taskInfo\"\r\n            className=\"nav--list-item\"\r\n          >\r\n            Task Information\r\n          </NavLink>\r\n        </StyledNav>\r\n\r\n        <hr />\r\n\r\n        <div className=\"nav--Router-content\">\r\n          <TransitionGroup>\r\n            <CSSTransition\r\n              appear\r\n              in\r\n              timeout={400}\r\n              classNames=\"slide\"\r\n              key={location.key}\r\n            >\r\n              <Switch location={location}>\r\n                <Route path=\"/home\" children={<Task />} />\r\n                <Route path=\"/taskInfo\" children={<TaskInfo />} />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { Content } from \"./Content\";\r\n\r\nexport function Nav() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n          <Route exact path=\"/\">\r\n              <Redirect to=\"megaventory_task/home\"></Redirect>\r\n          </Route>\r\n        <Route path=\"*\">\r\n          <Content />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","\nimport { Header } from \"./components/Header\";\nimport { Footer } from \"./components/Footer\";\nimport { Nav } from \"./components/Nav\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\n\nlibrary.add(fab);\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Nav />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}